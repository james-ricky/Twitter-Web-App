'use strict';

var AppSettings = {
  apiEvents: {
    internalError: 'server-internal-error'
  },
  authEvents: {
    loginSuccess: 'auth-login-success',
    loginFailed: 'auth-login-failed',
    logoutSuccess: 'auth-logout-success',
    sessionTimeout: 'auth-session-timeout',
    notAuthenticated: 'auth-not-authenticated',
    notAuthorized: 'auth-not-authorized',
    signUpStep1Success: 'auth-sign-up-step-1-success',
    signUpStep2Success: 'auth-sign-up-step-2-success',
    signUpStep3Success: 'auth-sign-up-step-3-success',
    signUpStep3Failed: 'sign-up-step3-failed',
    signUpFailed: 'auth-sign-up-failed',
    confirmationSuccess: 'auth-confirmation-success',
    confirmationFailed: 'auth-confirmation-failed',
    forgotPasswordSuccess: 'auth-forgot-password-success',
    forgotPasswordFailed: 'auth-forgot-password-failed',
    resetPasswordSuccess: 'reset-password-success',
    resetPasswordFailed: 'reset-password-failed',
    invitationConfirmSuccess: 'invitation-confirm-success',
    invitationConfirmFailed: 'invitation-confirm-failed',
  },
  uiEvents: {
    appLoaded: 'app-loaded',
    showNewTermsAndConditions: 'show-new-terms-and-conditions',
    localeUpdated: 'locale-updated'
  },
  serviceEvents: {
    meUpdated: 'me-updated',
    meUpdateInfoSuccess: 'me-update-info-success',
    meUpdateInfoFailed: 'me-update-info-failed',
    meUpdatePasswordSuccess: 'me-update-password-success',
    meUpdatePasswordFailed: 'me-update-password-failed',
    meDeleteSuccess: 'me-delete-success',
    meDeleteFailed: 'me-delete-failed',
    validateCompanyNamePassed: 'validate-company-name-passed',
    validateCompanyNameFailed: 'validate-company-name-failed',
    validateEmailPassed: 'validate-email-passed',
    validateEmailFailed: 'validate-email-failed',
    companyUpdated: 'company-updated',
    companyDeleteSuccess: 'company-delete-success',
    companyDeleteFailed: 'company-delete-failed',
    companyPrimaryUserUpdated: 'company-primary-user-updated',
    companyUserCreated: 'user-created',
    companyUserCreateFailed: 'user-create-failed',
    companyUserUpdated: 'user-updated',
    companyUsersUpdated: 'company-users-updated',
    searchesUpdated: 'searches-updated',
    searchCreated: 'search-created',
    searchUpdated: 'search-updated',
    searchDeleted: 'search-deleted',
    dashboardsUpdated: 'dashboards-updated',
    dashboardCreated: 'dashboard-created',
    dashboardUpdated: 'dashboard-updated',
    dashboardDeleted: 'dashboard-deleted',
    dashboardWidgetSizeChanged: 'dashboard-widget-size-changed',
    dashboardWidgetSettingsUpdated: 'dashboard-widget-settings-updated',
    alertMessagesUpdated: 'alert-messages-updated',
    alertSettingsUpdated: 'alert-settings-updated',
    alertSettingCreated: 'alert-setting-created',
    alertSettingUpdated: 'alert-setting-updated',
    industriesUpdated: 'industries-updated',
    countriesUpdated: 'countries-updated',
    continentsUpdated: 'continents-updated',
    paymentPlansUpdated: 'payment-plans-updated',
    errorUpdatingPaymentPlans: 'error-updating-payment-plans',
    searchSourcesUpdated: 'search-sources-updated',
    searchPurposesUpdated: 'search-purposes-updated',
    templatesUpdated: 'templates-updated',
    termsAndConditionsUpdated: 'terms-and-conditions-updated',
    fairUsePolicyUpdated: 'fair-use-policy-updated',
    privacyPolicyUpdated: 'privacy-policy-updated',
    braintreeClientTokenUpdated: 'braintree-client-token-updated',
    reloadAfterChangeLanguage: 'reload-after-change-language',
    getPackageDetail: 'get-package-detail'
  }
};

module.exports = AppSettings;
